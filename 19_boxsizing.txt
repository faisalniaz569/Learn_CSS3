********************

CHAPTER: 19

********************


** box-sizing


Example:

<!DOCTYPE html>
<html>
<head>
<style> 
#example1 {
  box-sizing: content-box;  
  width: 300px;
  height: 100px;
  padding: 30px;  
  border: 10px solid blue;
}

#example2 {
  box-sizing: border-box;
  width: 300px;
  height: 100px;
  padding: 30px;  
  border: 10px solid blue;
}
</style>
</head>
<body>

<h1>The box-sizing Property</h1>
<p>Defines how the width and height of an element are calculated: should they include padding and borders, or not.</p>

<h2>box-sizing: content-box (default):</h2>
<p>Width and height only apply to the content of the element:</p>
<div id="example1">This div has a width of 300px. But the full width is 300px + 20px (left and right border) + 60px (left and right padding) = 380px!</div>

<h2>box-sizing: border-box:</h2>
<p>Width and height apply to all parts of the element: content, padding and borders:</p>
<div id="example2">Here, the full width is 300px, no matter what!</div>

</body>
</html>


box-sizing: content-box|border-box|initial|inherit;


Example 2:

<!DOCTYPE html>
<html>
<head>
<style> 
div.container {
  width: 100%;
  border: 2px solid black;
}

div.box {
  box-sizing: border-box;
  width: 50%;
  border: 5px solid red;
  float: left;
}
</style>
</head>
<body>

<div class="container">
  <div class="box">This div occupies the left half</div>
  <div class="box">This div occupies the right half</div>
  <div style="clear:both;"></div>
</div>

</body>
</html>


Example 3: (Universal box-sizing)

<!DOCTYPE html>
<html>
<head>
<style>
* {
  box-sizing: border-box;
}

#example1 {
  width: 300px;
  padding: 40px;  
  border: 15px solid blue;
}

#example2 {
  width: 300px;
  padding: 10px;  
  border: 2px solid red;
}
</style>
</head>
<body>

<h1>The Universal box-sizing</h1>

<p>Since the result of using "box-sizing: border-box" is so much better, many developers want all elements on their pages to work this way.
The first style in the head section above ensures that all elements are sized in this more intuitive way.
The width you set is the width you get, without having to perform mental math and manage the complexity that comes from widths that come from multiple properties.
Applying this to all elements is safe and wise:</p>

<div id="example1">This div has a full width of 300px, no matter padding or border!</div>
<br>
<div id="example2">This div also has a full width of 300px, no matter padding or border!</div>

</body>
</html>












